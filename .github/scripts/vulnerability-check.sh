#!/bin/bash

# Verificar si el token de GitHub está presente
if [[ -z "$GH_TOKEN" ]]; then
  echo "ERROR: El token de GitHub no está establecido."
  exit 1
fi

# Lista de repositorios a verificar
REPOS=("centralcordoba/githubworkflowA" "centralcordoba/MarvelAngular")

# Crear un archivo CSV para almacenar los datos de vulnerabilidades
echo "Repository,Vulnerability Name,Severity,Description" > vulnerabilities.csv

# Loop a través de cada repositorio para verificar vulnerabilidades
for REPO in "${REPOS[@]}"; do
  # Obtener vulnerabilidades usando la API de GitHub
  VULN_DATA=$(curl -s -H "Authorization: token $GH_TOKEN" \
                   -H "Accept: application/vnd.github.v4+json" \
                   "https://api.github.com/repos/$REPO/vulnerability-alerts")
  
  # Procesar los datos
  # NOTA: Esto depende de la estructura exacta de los datos devueltos por la API, que deberías verificar.
  VULN_COUNT=$(echo "$VULN_DATA" | jq '. | length')
  
  # Iterar sobre cada vulnerabilidad y extraer detalles
  for (( i=0; i<$VULN_COUNT; i++ )); do
    VULN_NAME=$(echo "$VULN_DATA" | jq -r ".[$i].name")
    VULN_SEVERITY=$(echo "$VULN_DATA" | jq -r ".[$i].severity")
    VULN_DESCRIPTION=$(echo "$VULN_DATA" | jq -r ".[$i].description")
    
    # Añadir los datos al archivo CSV
    echo "$REPO,$VULN_NAME,$VULN_SEVERITY,$VULN_DESCRIPTION" >> vulnerabilities.csv
  done
done

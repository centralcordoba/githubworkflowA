#!/bin/bash

# Verificar si el token de GitHub está presente
if [[ -z "${GH_TOKEN}" ]]; then
    echo "ERROR: El token de GitHub no está establecido."
    exit 1
fi

# Lista de repositorios a verificar
REPOS=("centralcordoba/githubworkflowA" "centralcordoba/MarvelAngular")

# Crear/Clear el archivo CSV
echo "Repository,Vulnerability Name,Severity,Package Name,Package Version" > vulnerabilities.csv

# Bucle a través de cada repositorio y recuperar las vulnerabilidades
for REPO in "${REPOSITORIES[@]}"; do
    echo "Checking $REPO"
    
    # Ejemplo de QUERY en GraphQL para obtener vulnerabilidades. Ajusta según tu necesidad.
    QUERY=$(cat <<EOF
    {
      "query": "query { 
        repository(owner:\"[owner]\", name:\"[repo]\") {
          vulnerabilityAlerts(first: 100) {
            nodes {
              vulnerableManifestFilename
              vulnerableRequirements
              securityVulnerability {
                package {
                  name
                  ecosystem
                }
                severity
                updatedAt
                advisory {
                  description
                  identifiers {
                    type
                    value
                  }
                }
              }
            }
          }
        }
      }"
    }
EOF
)
    QUERY=${QUERY//\[owner\]/$(echo $REPO | cut -d/ -f1)}
    QUERY=${QUERY//\[repo\]/$(echo $REPO | cut -d/ -f2)}
    
    # Obtener vulnerabilidades usando la API de GraphQL de GitHub
    VULN_DATA=$(curl -s -H "Authorization: bearer $GH_TOKEN" \
                -X POST -d "$QUERY" \
                https://api.github.com/graphql)

    # Para depuración, imprime los datos recibidos
    echo "Datos recibidos para $REPO: $VULN_DATA"
    
    # Usar JQ para parsear los datos y extraer la información relevante.
    # NOTA: Ajusta estas líneas según la estructura exacta de tus datos
    VULN_COUNT=$(echo "$VULN_DATA" | jq '.data.repository.vulnerabilityAlerts.nodes | length')
    
    for ((i=0; i<$VULN_COUNT; i++)); do
        VULN_NAME=$(echo "$VULN_DATA" | jq -r ".data.repository.vulnerabilityAlerts.nodes[$i].securityVulnerability.advisory.description")
        VULN_SEVERITY=$(echo "$VULN_DATA" | jq -r ".data.repository.vulnerabilityAlerts.nodes[$i].securityVulnerability.severity")
        PACKAGE_NAME=$(echo "$VULN_DATA" | jq -r ".data.repository.vulnerabilityAlerts.nodes[$i].securityVulnerability.package.name")
        PACKAGE_VERSION=$(echo "$VULN_DATA" | jq -r ".data.repository.vulnerabilityAlerts.nodes[$i].vulnerableRequirements")

        # Añadir los datos al archivo CSV
        echo "$REPO,$VULN_NAME,$VULN_SEVERITY,$PACKAGE_NAME,$PACKAGE_VERSION" >> vulnerabilities.csv
    done
done

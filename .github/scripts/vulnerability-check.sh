#!/bin/bash

if [[ -z "$GH_TOKEN" ]]; then  # Bloque if, necesita un fi para cerrar
  echo "ERROR: El token de GitHub no estÃ¡ establecido."
  exit 1
fi  # cerrando bloque if

REPOS=("centralcordoba/githubworkflowA" "centralcordoba/MarvelAngular")

echo "Repository,Vulnerability Name,Severity,Description" > vulnerabilities.csv

for REPO in "${REPOS[@]}"; do  # Bloque for, necesita un done para cerrar

  VULN_DATA=$(curl -s -H "Authorization: token $GH_TOKEN" \
               -H "Accept: application/vnd.github.v4+json" \
               "https://api.github.com/repos/$REPO/vulnerability-alerts")
  
  if echo "$VULN_DATA" | jq -e 'has("message")' &> /dev/null; then  # Bloque if, necesita un fi para cerrar
    ERROR_MESSAGE=$(echo "$VULN_DATA" | jq -r '.message')
    echo "ERROR: API returned error for $REPO: $ERROR_MESSAGE"
    continue  
  fi  # cerrando bloque if

  VULN_COUNT=$(echo "$VULN_DATA" | jq '. | length')
  
  if [[ "$VULN_COUNT" == "0" || "$VULN_COUNT" == "null" ]]; then  # Bloque if, necesita un fi para cerrar
    continue
  fi  # cerrando bloque if
  
  for (( i=0; i<$VULN_COUNT; i++ )); do  # Bloque for, necesita un done para cerrar
    VULN_NAME=$(echo "$VULN_DATA" | jq -r ".[$i].name")
    VULN_SEVERITY=$(echo "$VULN_DATA" | jq -r ".[$i].severity")
    VULN_DESCRIPTION=$(echo "$VULN_DATA" | jq -r ".[$i].description")
    
    echo "$REPO,$VULN_NAME,$VULN_SEVERITY,$VULN_DESCRIPTION" >> vulnerabilities.csv
  done  # cerrando bloque for

done  # cerrando bloque for
